# -*- coding: utf-8 -*-
"""
Created on Tue Apr 12 10:44:47 2016

@author: Anne
"""

import csv
base=open('D:\Donnees\data-nontab-inter.txt', 'rb')
resultat=open("D:\Donnees\Result.txt", "rb")
fichier=open("D:\Donnees\\blastX.txt", "w")
query = csv.reader(resultat, delimiter='\t')
ref = csv.reader(base, delimiter='\t')


#création d'un dictionnaire qui contient en clé les positions de débuts et en valeur la séquences
dico={}
for ligne in ref:
    debut= int(ligne[2])
    sequence= ligne[5]
    dico[debut]=sequence
#print dico
    
#pour chaque ligne dans result (une ligne = 1 resultat d'un blast)
for row in query:
    #on split la chaine de caractère de la première colonne pour récupérr la position de début de la séquence qui a matché avec notre query
    alors=row[1].split()
    start=int(alors[3])
    #si notre position de début est différente de 1 (1= début du génome)
    if "lower_750" in row[0]:
        print row 
    if  start !=1 :
        if "-" in row[2]:
            if start in dico:
            #on récupère toute les informations que l'on a besoin
            #nom = identifiant de la séquence query
                nom=row[1]
            #sequence= séquence du gène qui a matché ave la query
                sequence=dico[start]
#            print sequence
            #requete et référence sont les séquences issues du blast
                reference=row[3]
                requete=row[2].replace("-","")
            #reverse = sequence mais inversée
                reverse=sequence[::-1]
            #RC = sequence complémentaire de reverse
                RC=""
            #c = séquence complentaire de sequence
                c=""
                for a in reverse :
                    if a=="T":
                        RC+="A"
                    if a=="A":
                        RC+="T"
                    if a=="G":
                        RC+="C"
                    if a=="C":
                        RC+="G"
                for e in sequence :
                    if e=="T":
                        c+="A"
                    if e=="A":
                        c+="T"
                    if e=="G":
                        c+="C"
                    if e=="C":
                        c+="G"
#                    print RC
                if reference in RC :
                    new=RC.replace(reference,requete)
                    fichier.write("reverse_complement"+"\t"+row[0]+ "\t"+row[1]+"\t"+new+"\n")
                if reference in sequence :
                    new=sequence.replace(reference,requete)
                    fichier.write("Sens du gene"+"\t"+row[0]+ "\t"+row[1]+"\t"+new+"\n")
                if reference in reverse :
                    new=reverse.replace(reference,requete)
                    fichier.write("reverse"+"\t"+row[0]+ "\t"+row[1]+"\t"+new+"\n")
                if reference in c:
                    new=c.replace(reference,requete)
                    fichier.write("complement"+"\t"+row[0]+ "\t"+row[1]+"\t"+new+"\n")
        
        if "-" in row[3]:
#si notre position est présent dans notre dictionnaire
            if start in dico:
            #on récupère toute les informations que l'on a besoin
            #nom = identifiant de la séquence query
                nom=row[1]
                reference=row[3].replace("-","")
                requete=row[2]
            #sequence= séquence du gène qui a matché ave la query
                sequence=dico[start]
#            print sequence
            #requete et référence sont les séquences issues du blast
            #reverse = sequence mais inversée
                reverse=sequence[::-1]
            #RC = sequence complémentaire de reverse
                RC=""
                    #c = séquence complentaire de sequence
                c=""
                for a in reverse :
                    if a=="T":
                        RC+="A"
                    if a=="A":
                        RC+="T"
                    if a=="G":
                        RC+="C"
                    if a=="C":
                        RC+="G"
                for e in sequence :
                    if e=="T":
                        c+="A"
                    if e=="A":
                        c+="T"
                    if e=="G":
                        c+="C"
                    if e=="C":
                        c+="G"
#                   print RC
                if reference in RC :
                    new=RC.replace(reference,requete)
                    fichier.write("reverse_complement"+"\t"+row[0]+ "\t"+row[1]+"\t"+new+"\n")
                if reference in sequence :
                    new=sequence.replace(reference,requete)
                    fichier.write("Sens du gene"+"\t"+row[0]+ "\t"+row[1]+"\t"+new+"\n")
                if reference in reverse :
                    new=reverse.replace(reference,requete)
                    fichier.write("reverse"+"\t"+row[0]+ "\t"+row[1]+"\t"+new+"\n")
                if reference in c:
                    new=c.replace(reference,requete)
                    fichier.write("complement"+"\t"+row[0]+ "\t"+row[1]+"\t"+new+"\n")
        if "-" not in row[2] and "-" not in row[3]:
        #si notre position est présent dans notre dictionnaire
            if start in dico:
            #on récupère toute les informations que l'on a besoin
        #nom = identifiant de la séquence query
                nom=row[1]
            #sequence= séquence du gène qui a matché ave la query
                sequence=dico[start]
#            print sequence
            #requete et référence sont les séquences issues du blast
                requete=row[2]
                reference=row[3]
#            reverse = sequence mais inversée
                reverse=sequence[::-1]
            #RC = sequence complémentaire de reverse
                RC=""
            #c = séquence complentaire de sequence
                c=""
                for a in reverse :
                    if a=="T":
                        RC+="A"
                    if a=="A":
                        RC+="T"
                    if a=="G":
                        RC+="C"
                    if a=="C":
                        RC+="G"
                for e in sequence :
                    if e=="T":
                        c+="A"
                    if e=="A":
                        c+="T"
                    if e=="G":
                        c+="C"
                    if e=="C":
                        c+="G"
#                    print RC
                if reference in RC :
                    new=RC.replace(reference,requete)
                    fichier.write("reverse_complement"+"\t"+row[0]+ "\t"+row[1]+"\t"+new+"\n")
                if reference in sequence :
                    new=sequence.replace(reference,requete)
                    fichier.write("Sens du gene"+"\t"+row[0]+ "\t"+row[1]+"\t"+new+"\n")
                if reference in reverse :
                    new=reverse.replace(reference,requete)
                    fichier.write("reverse"+"\t"+row[0]+ "\t"+row[1]+"\t"+new+"\n")
                if reference in c:
                    new=c.replace(reference,requete)
                    fichier.write("complement"+"\t"+row[0]+ "\t"+row[1]+"\t"+new+"\n")
        
fichier.close()        
        
